// <auto-generated />
using System;
using System.Net.Http;
using System.Collections.Generic;
using WebFornecedor.RefitInternalGenerated;

/* ******** Hey You! *********
 *
 * This is a generated file, and gets rewritten every time you build the
 * project. If you want to edit it, you need to edit the mustache template
 * in the Refit package */

#pragma warning disable
namespace WebFornecedor.RefitInternalGenerated
{
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [AttributeUsage (AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Enum | AttributeTargets.Constructor | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Interface | AttributeTargets.Delegate)]
    sealed class PreserveAttribute : Attribute
    {

        //
        // Fields
        //
        public bool AllMembers;

        public bool Conditional;
    }
}
#pragma warning restore

#pragma warning disable CS8632 // The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.
#pragma warning disable CS8669 // The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.
namespace WebFornecedor.Service
{
    using global::Refit;
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::System.Web;
    using global::WebFornecedor.Model;

    /// <inheritdoc />
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.Diagnostics.DebuggerNonUserCode]
    [Preserve]
    [global::System.Reflection.Obfuscation(Exclude=true)]
    partial class AutoGeneratedIApiService : IApiService
    {
        /// <inheritdoc />
        public HttpClient Client { get; protected set; }
        readonly IRequestBuilder requestBuilder;

        /// <inheritdoc />
        public AutoGeneratedIApiService(HttpClient client, IRequestBuilder requestBuilder)
        {
            Client = client;
            this.requestBuilder = requestBuilder;
        }

        /// <inheritdoc />
        Task<List<ModelApi>> IApiService.GetResponseAsync()
        {
            var arguments = new object[] {  };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetResponseAsync", new Type[] {  });
            return (Task<List<ModelApi>>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<ModelApi> IApiService.GetAuction(int id)
        {
            var arguments = new object[] { id };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetAuction", new Type[] { typeof(int) });
            return (Task<ModelApi>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<PostAuction> IApiService.PostAuction(PostAuction data, int id)
        {
            var arguments = new object[] { data, id };
            var func = requestBuilder.BuildRestResultFuncForMethod("PostAuction", new Type[] { typeof(PostAuction), typeof(int) });
            return (Task<PostAuction>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<PostAuction> IApiService.GetResultadosBids(int id)
        {
            var arguments = new object[] { id };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetResultadosBids", new Type[] { typeof(int) });
            return (Task<PostAuction>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<ModelSeller> IApiService.GetSeller(int id)
        {
            var arguments = new object[] { id };
            var func = requestBuilder.BuildRestResultFuncForMethod("GetSeller", new Type[] { typeof(int) });
            return (Task<ModelSeller>)func(Client, arguments);
        }

        /// <inheritdoc />
        Task<PostAuction> IApiService.PutAuction(PostAuctionClose put, int id)
        {
            var arguments = new object[] { put, id };
            var func = requestBuilder.BuildRestResultFuncForMethod("PutAuction", new Type[] { typeof(PostAuctionClose), typeof(int) });
            return (Task<PostAuction>)func(Client, arguments);
        }
    }
}

#pragma warning restore CS8632 // The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.
#pragma warning restore CS8669 // The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.
